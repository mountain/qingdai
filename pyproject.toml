[project]
name = "qingdai"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.13"
dependencies = [
    "scipy-stubs==1.16.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=24.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "types-setuptools; python_version < '3.13'",  # optional for some environments
]

[tool.black]
line-length = 100
# Limit to py311 to support widely available Black versions in local/CI environments
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | build
    | dist
  )/
)
'''

[tool.ruff]
line-length = 100
target-version = "py311"
# Keep ruff scope consistent with CI for Phase 0 (world/tests); can expand later
src = ["pygcm/world", "tests"]
# Enable autofix when running with `ruff check --fix`
fix = true
# Rule families:
# E,F (pycodestyle/pyflakes), I (isort), UP (pyupgrade), B (bugbear), SIM (simplify)
select = ["E", "F", "I", "UP", "B", "SIM"]
ignore = [
  # Long lines handled by formatter; prefer black's line-length
  "E501",
]
# Per-file ignores (examples)
per-file-ignores = {}


# Pytest config in pyproject (pytest.ini already present; this is a mirror for tooling)
[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
python_files = ["test_*.py"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
markers = [
    "phase0: Phase 0 baseline tests",
]

[tool.mypy]
python_version = "3.11"
# Restrict to Phase 0 surfaces; can widen in Phase 1+
files = ["pygcm/world", "tests"]
ignore_missing_imports = true
follow_imports = "skip"
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = false
show_error_codes = true
